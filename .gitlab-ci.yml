variables:
  HELM_RELEASE: deploy
stages:          
  # - build
  - deploy

# build_image:
#   stage: build
#   image:
#     name: gcr.io/kaniko-project/executor:v1.9.0-debug
#     entrypoint: [""]
#   script:
#     - /kaniko/executor
#       --context "${CI_PROJECT_DIR}/backend"
#       --dockerfile "${CI_PROJECT_DIR}/backend/Dockerfile"
#       --destination "${CI_REGISTRY_IMAGE}:${CI_COMMIT_TAG}"
#   rules:
#     - if: $CI_PIPELINE_SOURCE == "merge_request_event" && ($CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "main" || $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "staging")
    
.Deploy: &Deploy
  image: "dtzar/helm-kubectl:latest"
  environment: 
    name: $ENV
  before_script:
    - kubectl config set-cluster k8s --server="${KUBE_API_SERVER}"
    - kubectl config set clusters.k8s.certificate-authority-data "${KUBE_CA}"
    - kubectl config set-credentials gitlab --username=gitlab
    - kubectl config set-credentials gitlab --token="${KUBE_TOKEN}"
    - kubectl config view
    - kubectl config set-context default --cluster=k8s --user=gitlab
    - kubectl config use-context default
    - kubectl config set-context --current --namespace ${KUBERNETES_NAMESPACE}
    - kubectl config use-context default
    - kubectl config get-contexts
    - kubectl config view
    - kubectl delete --ignore-not-found=true secret image-secret
    - kubectl create secret docker-registry image-secret --docker-server=${CI_REGISTRY} --docker-username=${CI_DEPLOY_USER} --docker-password=${CI_DEPLOY_PASSWORD}
  script:
    - set -ex
    - helm template $HELM_RELEASE ${CI_PROJECT_DIR}/deploy /
      --debug 

deploy_staging:
  <<: *Deploy
  stage: deploy
  variables:
    KUBERNETES_NAMESPACE: tpos2023a175
    ENV: test
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event" && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "staging"

  


 

